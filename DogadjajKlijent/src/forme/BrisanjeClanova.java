package forme;

import domen.Prijava;
import domen.Korisnik;
import domen.Clan;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import kontroler.Kontroler;
import modeli.ModelTabeleDogadjaj;
import modeli.ModelTabeleClan;
import session.Sesija;
import transfer.ServerskiOdgovor;

public class BrisanjeClanova extends javax.swing.JFrame {
    Clan clanObrisi = new Clan();
    ArrayList<Clan> listaClanova = new ArrayList<>();
    ArrayList<Prijava> listaPrijava = new ArrayList<>();
    int red;

    public BrisanjeClanova() {
        initComponents();
        this.setLocationRelativeTo(null);
        Kontroler.getInstance().vratiClanoveZaBrisanjeFormu();
        Kontroler.getInstance().vratiPrijaveZaBrisanjeClanova();
       // srediTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaZaBrisanjeClanova = new javax.swing.JTable();
        btnObrisi = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPretraga = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin - brisanje clanova");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Brisanje clanova"));

        tabelaZaBrisanjeClanova.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaZaBrisanjeClanova);

        btnObrisi.setText("Obriši clana");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkaži");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        jLabel1.setText("Kriterijum pretrage: (filter)");

        txtPretraga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPretragaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnObrisi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPretraga)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        // TODO add your handling code here:
        red = tabelaZaBrisanjeClanova.getSelectedRow();
        
        if (red != -1) {
            ModelTabeleClan mtp = (ModelTabeleClan) tabelaZaBrisanjeClanova.getModel();
            clanObrisi = mtp.vratiSelektovanog(red);
            ArrayList<Prijava> nova = new ArrayList<>();
           for(Prijava ap : listaPrijava) {
               if(ap.getClan().getIdClana()== clanObrisi.getIdClana()) {
               nova.add(ap);
               int brojPRijava = ap.getDogadaj().getBrojPrijava()-1;
               if(brojPRijava < 0){
                   brojPRijava = 0;
               }
               ap.getDogadaj().setBrojPrijava(brojPRijava);
               }
            }
            clanObrisi.setListaPrijava(nova);
            Korisnik k = new Korisnik();
            k.setClan(clanObrisi);
            k.setIdKorisnika(clanObrisi.getIdClana());
            Kontroler.getInstance().obrisiClana(k);

        } else {
            JOptionPane.showMessageDialog(this, "Izaberite clana kojeg želite da obrišete!");
            return;
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void txtPretragaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaKeyReleased
        // TODO add your handling code here:
        String tekst = txtPretraga.getText();
        filter(tekst);
    }//GEN-LAST:event_txtPretragaKeyReleased

     private void filter(String tekst) {
        ModelTabeleClan model = (ModelTabeleClan) tabelaZaBrisanjeClanova.getModel();
        TableRowSorter<ModelTabeleClan> tr = new TableRowSorter<ModelTabeleClan>(model);
        tabelaZaBrisanjeClanova.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(tekst));
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BrisanjeClanova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BrisanjeClanova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BrisanjeClanova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BrisanjeClanova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BrisanjeClanova().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaZaBrisanjeClanova;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables

    private void srediTabelu() {
        ModelTabeleClan mtp = new ModelTabeleClan(listaClanova);
        tabelaZaBrisanjeClanova.setModel(mtp);
    }

    public void obrisiClanaIzTabele(ServerskiOdgovor so) {
        if (so.isFleg()) {
            listaClanova.remove(red);
            srediTabelu();
            JOptionPane.showMessageDialog(this, so.getPoruka());
        }
    }

    public void vratiClanoveZaBrisanjeFormu(ServerskiOdgovor so) {
        if (so.isFleg()) {            
            listaClanova = (ArrayList<Clan>) so.getOdgovor();
            srediTabelu();
        } else {
            JOptionPane.showMessageDialog(this, so.getPoruka());
        }
    }

    public void vratiPrijave(ServerskiOdgovor so) {
        if(so.isFleg()) {       
            listaPrijava = (ArrayList<Prijava>) so.getOdgovor();
        } else {
            JOptionPane.showMessageDialog(this, "Neuspešno učitavanje prijava!");
        }
    }
}
