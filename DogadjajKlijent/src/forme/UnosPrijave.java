package forme;

import domen.Prijava;
import domen.DomenskiObjekat;
import domen.Dogadjaj;
import domen.Clan;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import kontroler.Kontroler;
import modeli.ModelTabelePrijava;
import modeli.ModelTabeleDogadjaj;
import session.Sesija;
import transfer.ServerskiOdgovor;

public class UnosPrijave extends javax.swing.JFrame {
    Clan clanNovi = session.Sesija.getInstance().getKorisnik().getClan();
    ArrayList<Dogadjaj> listaDogadjaja = new ArrayList<>();
    ArrayList<Prijava> listaPrijava= new ArrayList<>();
    ArrayList<Prijava> listaZaCuvanje = new ArrayList<>();
    DijalogUnosPrijave dijalogUnosPrijava = new DijalogUnosPrijave(this, true);
    Dogadjaj d = new Dogadjaj();
    int red;
    /**
     * Creates new form UnosAplikacije
     */
    public UnosPrijave() {
        initComponents();
        this.setLocationRelativeTo(null);
        srediTabeluPrijave();
        Kontroler.getInstance().vratiDogadjajeZaUnosPrijave();
        Kontroler.getInstance().vratiPrijave();
        srediTabeluDogadjaji();
        clanNovi.setListaPrijava(listaPrijava);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDogadjaji = new javax.swing.JTable();
        btnPrijava = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaPregledPrijava = new javax.swing.JTable();
        lblKriterijumPretrage = new javax.swing.JLabel();
        txtKriterijumPretrage = new javax.swing.JTextField();
        btnObrisi = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Clan - unos prijave");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos prijave"));

        tabelaDogadjaji.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaDogadjaji);

        btnPrijava.setText("Prijavi se");
        btnPrijava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrijavaActionPerformed(evt);
            }
        });

        tabelaPregledPrijava.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabelaPregledPrijava);

        lblKriterijumPretrage.setText("Kriterijum pretrage: (filter)");

        txtKriterijumPretrage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKriterijumPretrageKeyReleased(evt);
            }
        });

        btnObrisi.setText("Povuci prijavu");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkaži");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sačuvaj sve");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblKriterijumPretrage)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtKriterijumPretrage))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnPrijava, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnSacuvaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKriterijumPretrage)
                    .addComponent(txtKriterijumPretrage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrijava, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrijavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrijavaActionPerformed
        // TODO add your handling code here: 
        int red = tabelaDogadjaji.getSelectedRow();
        if(red != -1) {
        ModelTabeleDogadjaj mtp = (ModelTabeleDogadjaj) tabelaDogadjaji.getModel();
        d = mtp.dajSelektovanu(red);
        for(Prijava a : listaPrijava) {
            if(a.getDogadaj().getNaziv().equals(d.getNaziv())) {
                JOptionPane.showMessageDialog(this, "Već ste se prijavili za ovaj dogadjaj!");
                return;
            }
        }
        DijalogUnosPrijave dij = new DijalogUnosPrijave(this, true);
        dij.popuniTxt(d);
        dij.setVisible(true); 
        } else {
            JOptionPane.showMessageDialog(this, "Selektujte dogadjaj na koji zelite da idete!");
            return;
        }
    }//GEN-LAST:event_btnPrijavaActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        // TODO add your handling code here:
        red = tabelaPregledPrijava.getSelectedRow();
        if(red != -1) {
            ModelTabelePrijava mta = (ModelTabelePrijava) tabelaPregledPrijava.getModel();
            Prijava pr = mta.vratiRed(red);
            Dogadjaj dogadjaj = pr.getDogadaj();
            int brojPRijava = dogadjaj.getBrojPrijava()-1;
               if(brojPRijava < 0){
                   brojPRijava = 0;
            }
            dogadjaj.setBrojPrijava(dogadjaj.getBrojPrijava()-1);
            clanNovi.getListaPrijava().add(pr);
            listaPrijava.remove(pr);
            srediTabeluPrijave();           
            System.out.println(clanNovi.getListaPrijava());
           for(Prijava app : clanNovi.getListaPrijava()) {
               if(app.getIdPrijave()== pr.getIdPrijave()) {
                   app.setDogadaj(dogadjaj);
                   app.setClan(clanNovi);
                   app.setStatus("D");
               }
           }
        }
        else {
            JOptionPane.showMessageDialog(this, "Izaberite prijavu koju želite da povučete!");
            return;
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void txtKriterijumPretrageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKriterijumPretrageKeyReleased
        // TODO add your handling code here:
        String tekst = txtKriterijumPretrage.getText();
        filter(tekst);
    }//GEN-LAST:event_txtKriterijumPretrageKeyReleased

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        Kontroler.getInstance().sacuvajPrijaveUBazu(clanNovi);
        ModelTabelePrijava mta = (ModelTabelePrijava) tabelaPregledPrijava.getModel();
            Prijava pr = mta.vratiRed(red);
            Dogadjaj dogadjaj = pr.getDogadaj();
            int brojPRijava = dogadjaj.getBrojPrijava()-1;
               if(brojPRijava < 0){
                   brojPRijava = 0;
            }
            dogadjaj.setBrojPrijava(brojPRijava);
            clanNovi.getListaPrijava().add(pr);
        dispose();
    }//GEN-LAST:event_btnSacuvajActionPerformed

    
     private void filter(String tekst) {
        ModelTabeleDogadjaj model = (ModelTabeleDogadjaj) tabelaDogadjaji.getModel();
        TableRowSorter<ModelTabeleDogadjaj> tr = new TableRowSorter<ModelTabeleDogadjaj>(model);
        tabelaDogadjaji.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(tekst));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnosPrijave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnosPrijave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnosPrijave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnosPrijave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UnosPrijave().setVisible(true);
            }
        });
    }

    public ArrayList<Dogadjaj> getListaDogadjaja() {
        return listaDogadjaja;
    }

    public void setListaDogadjaja(ArrayList<Dogadjaj> listaDogadjaja) {
        this.listaDogadjaja = listaDogadjaja;
    }

    public ArrayList<Prijava> getListaPrijava() {
        return listaPrijava;
    }

    public void setListaPrijava(ArrayList<Prijava> listaPrijava) {
        this.listaPrijava = listaPrijava;
    }

    public DijalogUnosPrijave getDijalogUnosPrijava() {
        return dijalogUnosPrijava;
    }

    public void setDijalogUnosPrijava(DijalogUnosPrijave dijalogUnosPrijava) {
        this.dijalogUnosPrijava = dijalogUnosPrijava;
    }

    public Dogadjaj getD() {
        return d;
    }

    public void setD(Dogadjaj d) {
        this.d = d;
    }
    
    public ArrayList<Prijava> getListaZaCuvanje() {
        return listaZaCuvanje;
    }

    public void setListaZaCuvanje(ArrayList<Prijava> listaZaCuvanje) {
        this.listaZaCuvanje = listaZaCuvanje;
    }

    public Clan getClanNovi() {
        return clanNovi;
    }

    public void setClanNovi(Clan clanNovi) {
        this.clanNovi = clanNovi;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnPrijava;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblKriterijumPretrage;
    private javax.swing.JTable tabelaDogadjaji;
    private javax.swing.JTable tabelaPregledPrijava;
    private javax.swing.JTextField txtKriterijumPretrage;
    // End of variables declaration//GEN-END:variables

    public void srediTabeluDogadjaji() {
        ModelTabeleDogadjaj mtp = new ModelTabeleDogadjaj(listaDogadjaja);
        tabelaDogadjaji.setModel(mtp);
    }

    public void srediTabeluPrijave() {
        ModelTabelePrijava mta = new ModelTabelePrijava(listaPrijava);
        tabelaPregledPrijava.setModel(mta);
    }

    public void dodajPrijavu(ServerskiOdgovor so) {
        if (so.isFleg()) {
            JOptionPane.showMessageDialog(this, so.getPoruka());
        } else {
            JOptionPane.showMessageDialog(this, so.getPoruka());
            listaPrijava.remove(listaPrijava.size()-1);
            srediTabeluPrijave();
        }
    }

    public void vratiDogadjajeZaUnosPrijave(ServerskiOdgovor so) {
        if (so.isFleg()) {            
            System.out.println();
            listaDogadjaja =  (ArrayList<Dogadjaj>) so.getOdgovor();
            srediTabeluDogadjaji();
        } else {
            JOptionPane.showMessageDialog(this, "Neuspešno učitavanje dogadjaja!");
        }
    }

    public void vratiPrijave(ServerskiOdgovor so) {
        if (so.isFleg()) {       
            listaPrijava =  (ArrayList<Prijava>) so.getOdgovor();
            ArrayList<Prijava> nova=new ArrayList<>();
            for(Prijava a : listaPrijava){
                if(a.getClan().getIdClana()==Sesija.getInstance().getClan().getIdClana()){
                    nova.add(a);
                }
            }
            listaPrijava=nova;
            srediTabeluPrijave();
        } else {
            JOptionPane.showMessageDialog(this, "Neuspešno učitavanje prijava!");
        }
    }

    public void obrisiPrijavuIzTabele(ServerskiOdgovor so) {
        if (so.isFleg()) {
            listaPrijava.remove(red);
            srediTabeluPrijave();
            JOptionPane.showMessageDialog(this, so.getPoruka());
        } else {
            JOptionPane.showMessageDialog(this, so.getPoruka());
        }
    }

    public void sacuvajPrijave(ServerskiOdgovor so) {
        if (so.isFleg()) {            
            JOptionPane.showMessageDialog(this, so.getPoruka());
        } else {
            JOptionPane.showMessageDialog(this, so.getPoruka());
        }
    }

}
