package forme;

import domen.Drzava;
import domen.Dogadjaj;
import domen.Clan;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import kontroler.Kontroler;
import modeli.ModelTabeleDogadjaj;
import modeli.ModelTabeleClan;
import transfer.ServerskiOdgovor;

public class UnosDogadjaja extends javax.swing.JFrame {
    ArrayList<Dogadjaj> listaDogadjaja = new ArrayList<>();
    ArrayList<Drzava> listaDrzava = new ArrayList<>();
    /**
     * Creates new form UnosPrakse
     */
    public UnosDogadjaja() {
        initComponents();
        this.setLocationRelativeTo(null);
        Kontroler.getInstance().vratiDrzave();
        Kontroler.getInstance().vratiDogadjajeZaUnosFormu();
        //srediTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        txtDatumPočetka = new javax.swing.JTextField();
        txtDatumZavršetka = new javax.swing.JTextField();
        btnUnesiPraksu = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDogadjaji = new javax.swing.JTable();
        lblPretraga = new javax.swing.JLabel();
        txtPretraga = new javax.swing.JTextField();
        cmbDrzava = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin - unos dogadjaja");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos dogadjaja"));

        jLabel1.setText("Naziv:");

        jLabel3.setText("Datum početka dogadjaja:");

        jLabel4.setText("Datum završetka dogadjaja:");

        jLabel5.setText("Država:");

        btnUnesiPraksu.setText("Unesi dogadjaj");
        btnUnesiPraksu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnesiPraksuActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkaži");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        tabelaDogadjaji.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaDogadjaji);

        lblPretraga.setText("Pretraga dogadjaja: (filter)");

        txtPretraga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPretragaKeyReleased(evt);
            }
        });

        cmbDrzava.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(10, 10, 10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDatumZavršetka, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbDrzava, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDatumPočetka, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnUnesiPraksu, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblPretraga)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPretraga)
                        .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDatumPočetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtDatumZavršetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cmbDrzava, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUnesiPraksu, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUnesiPraksuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnesiPraksuActionPerformed
        // TODO add your handling code here:
        if(txtDatumPočetka.getText().isEmpty() || txtDatumZavršetka.getText().isEmpty() 
                || txtNaziv.getText().isEmpty() || cmbDrzava.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(this, "Potrebno je popuniti sva polja!");
            return;
        }
        
        String naziv = txtNaziv.getText();
        Drzava drzava =(Drzava) cmbDrzava.getSelectedItem();
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        Date datumPocetka = null;
        Date datumZavrsetka = null;
        try {
            datumPocetka = sdf.parse(txtDatumPočetka.getText());
            datumZavrsetka = sdf.parse(txtDatumZavršetka.getText());      
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Pogrešan format datuma!");
           //Logger.getLogger(UnosDogadjaja.class.getName()).log(Level.SEVERE, null, ex);
        }
        //validacija za datum
        if(datumPocetka.after(datumZavrsetka)) {
            JOptionPane.showMessageDialog(this, "Datum početka ne može biti nakon datuma završetka!");
            return;
        }
        
        Dogadjaj p = new Dogadjaj();
        p.setDatumPocetka(datumPocetka);
        p.setDatumZavrsetka(datumZavrsetka);
        p.setDrzava(drzava);
        p.setNaziv(naziv);
        
        //validacija da li posoji
        ModelTabeleDogadjaj mtp = (ModelTabeleDogadjaj) tabelaDogadjaji.getModel();
        boolean postoji = mtp.daLiPostoji(p);
        if(!postoji) {
        Kontroler.getInstance().dodajDogadjajUbazu(p);
        
        listaDogadjaja.add(p);
        srediTabelu();
        resetujPolja();
        } else {
            JOptionPane.showMessageDialog(this, "Već postoji ovaj dogadjaj!");
            return;
        }
    }//GEN-LAST:event_btnUnesiPraksuActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void txtPretragaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaKeyReleased
        // TODO add your handling code here:
        String tekst = txtPretraga.getText();
        filter(tekst);
    }//GEN-LAST:event_txtPretragaKeyReleased

    private void filter(String tekst) {
        ModelTabeleDogadjaj model = (ModelTabeleDogadjaj) tabelaDogadjaji.getModel();
        TableRowSorter<ModelTabeleDogadjaj> tr = new TableRowSorter<ModelTabeleDogadjaj>(model);
        tabelaDogadjaji.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(tekst));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnosDogadjaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnosDogadjaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnosDogadjaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnosDogadjaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UnosDogadjaja().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnUnesiPraksu;
    private javax.swing.JComboBox cmbDrzava;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPretraga;
    private javax.swing.JTable tabelaDogadjaji;
    private javax.swing.JTextField txtDatumPočetka;
    private javax.swing.JTextField txtDatumZavršetka;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables


    private void srediTabelu() {
        ModelTabeleDogadjaj mtp = new ModelTabeleDogadjaj(listaDogadjaja);
        tabelaDogadjaji.setModel(mtp);
    }

    public void unesiDogadjaj(ServerskiOdgovor so) {
        if (so.isFleg()) {
            JOptionPane.showMessageDialog(this, so.getPoruka());
        } else {
            JOptionPane.showMessageDialog(this, so.getPoruka());
            listaDogadjaja.remove(listaDogadjaja.size()-1);
            srediTabelu();
        }
    }

    public void vratiDrzave(ServerskiOdgovor so) {
        if (so.isFleg()) {            
            System.out.println();
            listaDrzava =  (ArrayList<Drzava>) so.getOdgovor();
            cmbDrzava.removeAllItems();
           
            for(Drzava d : listaDrzava) {
                cmbDrzava.addItem(d);
            }
           cmbDrzava.setSelectedIndex(-1);
        } else {
            JOptionPane.showMessageDialog(this, "Neuspešno učitavanje država!");
        }
    }

    public void vratiDogadjajeZaUnosFormu(ServerskiOdgovor so) {
        if (so.isFleg()) {            
            System.out.println();
            listaDogadjaja =  (ArrayList<Dogadjaj>) so.getOdgovor();
            srediTabelu();
        } else {
            JOptionPane.showMessageDialog(this, "Neuspešno učitavanje dogadjaja!");
        }
    }

    private void resetujPolja() {
        txtDatumPočetka.setText("");
        txtDatumZavršetka.setText("");
        txtNaziv.setText("");
        cmbDrzava.setSelectedIndex(-1);
    }

}
